/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turbomessageapp.ui;

import java.util.ArrayList;
import java.util.HashMap;
import turbomessageapp.functionality.Bloc;
import turbomessageapp.functionality.Manager;
import turbomessageapp.logic.Message;
import turbomessageapp.logic.MessageListener;
import turbomessageapp.logic.MessageRequest;
import turbomessageapp.logic.User;

/**
 *
 * @author franciscojavierlf
 */
public class Dashboard extends javax.swing.JFrame {
  
  private final Manager manager;
  private final User user;
  
  public ArrayList<Message> messages;
  private HashMap<String, MessageRequest> directory;

  /**
   * Creates new form Dashboard
   */
  public Dashboard(User user) {
    initComponents();
    setLocationRelativeTo(null);
    this.user = user;
    // Pone el nombre
    nameLabel.setText("Hola, " + user.name + " (" + user.id + ")");
    // Comienza a escuchar para nuevos mensajes
    manager = new Manager(user);
    manager.addMessageListener(new DashboardMessageListener());
    
    // Descarga los mensajes de las conversaciones
    messages = manager.bloc.getMessages(user);
    printMessages();
    directory = manager.bloc.getUserDirectory(user);
    printDirectory();
  }
    
  /**
   * Imprime el directorio.
   */
  private void printDirectory() {
    String text = "";
    MessageRequest request;
    User opposite;
    for (String id : directory.keySet()) {
      request = directory.get(id);
      opposite = request.getOpposite(user);
      text += opposite.name + " (" + opposite.id + ") [";
      if (request.state == MessageRequest.State.PENDING)
        text += "Pendiente" + (!request.sender.equals(user) ? " (para ti)" : "");
      else
        text += (request.state == MessageRequest.State.ACCEPTED ? "Aceptada" : "Rechazada") + (!request.sender.equals(user) ? " por ti" : "") + "]\n";
      
    }
    requestsArea.setText(text);
  }
  
  /**
   * Descarga todos los mensajes.
   */
  private void printMessages() {
    // E imprime
    String text = "";
    String pronoun;
    Message m;
    User opposite;
    for (int i = messages.size() - 1; i >= 0; i--) {
      m = messages.get(i);
      // Brinca los updates de estado
      if (m.type == Message.Type.STATE_UPDATE) continue;
      // Elige el texto correcto
      opposite = m.getOpposite(user);
      pronoun = m.sender.equals(user) ? "para " : "de ";
      text += (m.type == Message.Type.TEXT ? "Mensaje " :
               m.type == Message.Type.REQUEST ? "Solicitud " :
               m.type == Message.Type.REQUEST_ACCEPTED ? "Solicitud aceptada " :
               "Solicitud rechazada ") + pronoun + opposite.name;
      if (m.sender.equals(user))
        text += " [" + (m.state == Message.State.DELIVERED ? "D" : m.state == Message.State.READ ? "R" : "S") + "]";
      text += ": " + m.body + "\n";
    }
    messagesArea.setText(text);
    
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    nameLabel = new javax.swing.JLabel();
    jScrollPane1 = new javax.swing.JScrollPane();
    messagesArea = new javax.swing.JTextArea();
    jLabel1 = new javax.swing.JLabel();
    jScrollPane2 = new javax.swing.JScrollPane();
    messageField = new javax.swing.JTextArea();
    userMessageField = new javax.swing.JTextField();
    jButton1 = new javax.swing.JButton();
    jScrollPane3 = new javax.swing.JScrollPane();
    requestsArea = new javax.swing.JTextArea();
    jLabel2 = new javax.swing.JLabel();
    jButton2 = new javax.swing.JButton();
    jButton3 = new javax.swing.JButton();
    jButton4 = new javax.swing.JButton();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    nameLabel.setFont(new java.awt.Font("Open Sans", 0, 48)); // NOI18N
    nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    nameLabel.setText("jLabel1");

    messagesArea.setEditable(false);
    messagesArea.setColumns(20);
    messagesArea.setRows(5);
    jScrollPane1.setViewportView(messagesArea);

    jLabel1.setText("Mensajes");

    messageField.setColumns(20);
    messageField.setRows(5);
    jScrollPane2.setViewportView(messageField);

    jButton1.setText("Enviar");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });

    requestsArea.setEditable(false);
    requestsArea.setColumns(20);
    requestsArea.setRows(5);
    jScrollPane3.setViewportView(requestsArea);

    jLabel2.setText("Solicitudes");

    jButton2.setText("Pedir");
    jButton2.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton2ActionPerformed(evt);
      }
    });

    jButton3.setText("Aceptar");
    jButton3.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton3ActionPerformed(evt);
      }
    });

    jButton4.setText("Rechazar");
    jButton4.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton4ActionPerformed(evt);
      }
    });

    jLabel3.setText("Usuario");

    jLabel4.setText("Mensaje");

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(234, 234, 234)
        .addComponent(jLabel1)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jLabel2)
        .addGap(267, 267, 267))
      .addGroup(layout.createSequentialGroup()
        .addGap(31, 31, 31)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(nameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(18, 18, 18)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jScrollPane2)
              .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
              .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                      .addComponent(userMessageField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                      .addComponent(jLabel3))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton2)
                    .addGap(18, 18, 18)
                    .addComponent(jButton3)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jButton4))
                  .addComponent(jLabel4))
                .addGap(0, 20, Short.MAX_VALUE)))))
        .addContainerGap())
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(31, 31, 31)
        .addComponent(nameLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
          .addComponent(jLabel2))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(33, Short.MAX_VALUE))
          .addGroup(layout.createSequentialGroup()
            .addComponent(jScrollPane3)
            .addGap(18, 18, 18)
            .addComponent(jLabel3)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
              .addComponent(userMessageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addComponent(jButton1)
              .addComponent(jButton2)
              .addComponent(jButton3)
              .addComponent(jButton4))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jLabel4)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(27, 27, 27))))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    // Manda mensaje
    Message m = manager.sendTextMessage(user, userMessageField.getText(), messageField.getText());
    messages.add(m);
    printMessages();
  }//GEN-LAST:event_jButton1ActionPerformed

  private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    // Pide solicitud
    String contactId = userMessageField.getText();
    directory.put(contactId, manager.sendRequest(user, contactId));
    printDirectory();
  }//GEN-LAST:event_jButton2ActionPerformed

  private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
    // Acepta una solicitud
    String contactId = userMessageField.getText();
    directory.put(contactId, manager.acceptRequest(contactId, user.id));
    printDirectory();
  }//GEN-LAST:event_jButton3ActionPerformed

  private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
    // Rechaza solicitud
    String contactId = userMessageField.getText();
    directory.put(contactId,manager.denyRequest(contactId, user.id));
    printDirectory();
  }//GEN-LAST:event_jButton4ActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton jButton1;
  private javax.swing.JButton jButton2;
  private javax.swing.JButton jButton3;
  private javax.swing.JButton jButton4;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JScrollPane jScrollPane2;
  private javax.swing.JScrollPane jScrollPane3;
  private javax.swing.JTextArea messageField;
  private javax.swing.JTextArea messagesArea;
  private javax.swing.JLabel nameLabel;
  private javax.swing.JTextArea requestsArea;
  private javax.swing.JTextField userMessageField;
  // End of variables declaration//GEN-END:variables

  /**
   * Acciones al detectar nuevos mensajes.
   */
  private class DashboardMessageListener implements MessageListener {

    @Override
    public void onTextReceived(Message message) {
      messages.add(message);
      printMessages();
      // Avisa al usuario que leimos su mensaje
      manager.updateMessageState(message, Message.State.READ);
    }

    @Override
    public void onRequestReceived(Message message) {
      directory.put(message.sender.id, new MessageRequest(message.sender, message.receiver, MessageRequest.State.PENDING));
      printDirectory();
    }

    @Override
    public void onRequestAccepted(Message message) {
      directory.get(message.sender.id).state = MessageRequest.State.ACCEPTED;
      printDirectory();
    }

    @Override
    public void onRequestDenied(Message message) {
      directory.get(message.sender.id).state = MessageRequest.State.DENIED;
      printDirectory();
    }

    @Override
    public void onStateUpdated(Message message) {
      // Consigue el mensaje y lo intercambia
      int i = messages.indexOf(message);
      if (i >= 0) {
        Message m = messages.get(i);
        m.state = message.state;
        printMessages();
      }
    }
    
  }
}
